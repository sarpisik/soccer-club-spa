{"version":3,"sources":["components/StaticContent.jsx","components/ContactIcon.jsx","components/FormValidator.js","components/withForm.jsx","components/Button.jsx","components/Contact/Form/index.jsx","components/Contact/index.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Data__WEBPACK_IMPORTED_MODULE_1__","react_bootstrap__WEBPACK_IMPORTED_MODULE_2__","react_bootstrap__WEBPACK_IMPORTED_MODULE_3__","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","withData","_ref","data","image","title","children","backgroundImage","getImage","style","concat","backgroundSize","backgroundPosition","backgroundRepeat","minHeight","width","paddingTop","a","createElement","className","sm","backgroundColor","Heading","Title","componentClass","Body","icons","phone","faPhone","email","faEnvelope","facebook","faFacebookF","youtube","faYoutube","twitter","faTwitter","instagram","faInstagram","ContactIcon","_ref$icon","icon","name","link","text","size","react_default","href","rel","index_es","FormValidator","validations","Object","classCallCheck","this","state","validation","valid","forEach","rule","field","isInvalid","field_value","toString","args","method","validator","apply","toConsumableArray","validWhen","isValid","map","objectSpread","withForm","propState","rules","Component","_React$Component","WithForm","props","_this","possibleConstructorReturn","getPrototypeOf","call","FieldGroup","id","label","validationState","objectWithoutProperties","FormGroup","controlId","ControlLabel","FormControl","Feedback","onChange","e","target","value","setState","defineProperty","onValidate","validate","onSubmit","_","show","isValidate","keys","every","inherits","createClass","key","Fragment","assign","getValidationState","Modal","display","alignItems","onHide","Header","closeButton","padding","Alert","position","margin","bsStyle","Footer","Button","onClick","React","components_Button","esm_extends","formFields","type","message","min","max","preventDefault","document","getElementById","reset","i","placeholder","string","charAt","toUpperCase","slice","disabled","Icon","arguments","length","undefined","links","mapStyle","maxWidth","height","marginLeft","marginRight","coordinate","lat","lng","MapContainer","google","dist","zoom","initialCenter","GoogleApiWrapper","apiKey","process","_ref2","StaticContent","Contact_Form","components_ContactIcon","Contact_MapContainer"],"mappings":"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","file":"static/js/7.04b43749.chunk.js","sourcesContent":["import React from 'react';\nimport {withData} from '../Data';\nimport {Grid, Row, Col, Panel} from 'react-bootstrap';\n\nconst StaticContent = ({\n  data,\n  image,\n  title,\n  children\n}) => {\n  const backgroundImage = data.getImage(image);\n  const style = {\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    minHeight: '100vh',\n    width: '100%',\n    paddingTop: '5rem'\n  }\n  return (\n    <div style={style} className=\"static-content\">\n      <Grid>\n        <Row>\n          <Col sm={12}>\n            <Panel style={{backgroundColor: 'rgba(0, 0, 0, .7)'}}>\n              <Panel.Heading>\n                <Panel.Title componentClass=\"h2\">\n                  {title}\n                </Panel.Title>\n              </Panel.Heading>\n              <Panel.Body>\n                {children}\n              </Panel.Body>\n            </Panel>\n          </Col>\n        </Row>\n      </Grid>\n    </div>\n  );\n}\n\nexport default withData(StaticContent);\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faFacebookF,\n  faYoutube,\n  faTwitter,\n  faInstagram\n} from '@fortawesome/free-brands-svg-icons'\nimport { faEnvelope, faPhone } from '@fortawesome/free-solid-svg-icons'\n\nconst icons = {\n  phone: faPhone,\n  email: faEnvelope,\n  facebook: faFacebookF,\n  youtube: faYoutube,\n  twitter: faTwitter,\n  instagram: faInstagram\n}\n\n// Icon Element\nconst ContactIcon = ({ icon: { name, text, link, size } }) => (\n  <a href={link} rel=\"noopener noreferrer\">\n    <FontAwesomeIcon icon={icons[name]} size={size} />\n  </a>\n)\n\nexport default ContactIcon\n","import validator from 'validator';\n\nclass FormValidator {\n  constructor(validations) {\n    // validations is an array of validation rules specific to a form\n    this.validations = validations;\n  }\n\n  validate(state) {\n    // start out assuming valid\n    let validation = this.valid();\n\n    // for each validation rule\n    this.validations.forEach(rule => {\n\n      // if the field hasn't already been marked invalid by an earlier rule\n      if (!validation[rule.field].isInvalid) {\n        // determine the field value, the method to invoke and optional args from\n        // the rule definition\n        const field_value = state[rule.field].toString();\n        const args = rule.args || [];\n        const validation_method =\n              typeof rule.method === 'string' ?\n              validator[rule.method] :\n              rule.method\n\n        // call the validation_method with the current field value as the first\n        // argument, any additional arguments, and the whole state as a final\n        // argument.  If the result doesn't match the rule.validWhen property,\n        // then modify the validation object for the field and set the isValid\n        // field to false\n        if(validation_method(field_value, ...args, state) !== rule.validWhen) {\n          validation[rule.field] = { isInvalid: true }\n          validation.isValid = false;\n        }\n      }\n    });\n\n    return validation;\n  }\n\n  valid() {\n    const validation = {}\n\n    this.validations.map(rule => (\n      validation[rule.field] = { isInvalid: false }\n    ));\n\n    return { isValid: true, ...validation };\n  }\n}\n\nexport default FormValidator;\n","import React from 'react'\nimport {\n  Alert,\n  Button,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  Modal\n} from 'react-bootstrap'\nimport FormValidator from './FormValidator'\n\nconst withForm = propState => rules => Component => {\n  class WithForm extends React.Component {\n    constructor(props) {\n      super(props)\n\n      // Child component creates\n      // The initial tate\n      this.state = { ...propState, show: false }\n\n      // Input Validations\n      this.validator = new FormValidator(rules)\n    }\n\n    FieldGroup = ({ id, label, validationState, ...props }) => (\n      <FormGroup validationState={validationState} controlId={id}>\n        <ControlLabel>{label}</ControlLabel>\n        <FormControl {...props} />\n        <FormControl.Feedback />\n      </FormGroup>\n    )\n\n    onChange = e => {\n      let name = e.target.name\n      let value = e.target.value\n      this.setState(state => ({\n        [name]: value\n      }))\n    }\n\n    onValidate = e => {\n      if (this.state[e] !== '') {\n        const validation = this.validator.validate(this.state)\n        return validation[e].isInvalid ? 'error' : 'success'\n      }\n    }\n\n    onSubmit = _ =>\n      this.setState(state => ({ ...propState, show: !state.show }))\n\n    isValidate = _ =>\n      Object.keys(propState).every(\n        value => this.onValidate(value) === 'success'\n      )\n\n    render() {\n      return (\n        <>\n          <Component\n            {...this.state}\n            {...this.props}\n            FieldGroup={this.FieldGroup}\n            onChange={this.onChange}\n            onSubmit={this.onSubmit}\n            getValidationState={this.onValidate}\n            isValidate={this.isValidate}\n          />\n          <Modal\n            style={{\n              display: 'flex',\n              alignItems: 'center'\n            }}\n            show={this.state.show}\n            onHide={this.onSubmit}>\n            <Modal.Header closeButton />\n            <Modal.Body style={{ padding: '0' }}>\n              <Alert\n                style={{\n                  position: 'static',\n                  margin: '0'\n                }}\n                bsStyle=\"success\">\n                Your Message Has Been Sent. <strong>Thank you!</strong>\n              </Alert>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button bsStyle=\"success\" onClick={this.onSubmit}>\n                <strong>OK</strong>\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </>\n      )\n    }\n  }\n  return WithForm\n}\n\nexport default withForm\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nexport default ({...props}) => (\n  <Button {...props}>\n    {props.children}\n  </Button>\n)\n","import React from 'react';\nimport withForm from '../../../components/withForm';\nimport Button from '../../../components/Button';\n\nconst formFields = [\n  {\n    id: 'name',\n    type: 'text',\n  },\n  {\n    id: 'email',\n    type: 'email',\n  },\n  {\n    id: 'message',\n    type: 'text',\n    componentClass: 'textarea'\n  },\n];\n\nconst validateRules = [\n  {\n    field: 'name',\n    method: 'isAlpha',\n    args: ['tr-TR'],\n    validWhen: true,\n  },\n  {\n    field: 'name',\n    method: 'isByteLength',\n    args: [{min: 2, max: 10}],\n    validWhen: true,\n  },\n  {\n    field: 'email',\n    method: 'isEmail',\n    validWhen: true,\n  },\n  {\n    field: 'message',\n    method: 'isByteLength',\n    args: [{min: 2, max: 600}],\n    validWhen: true,\n  }\n];\n\nconst state = {\n  name: '',\n  email: '',\n  message: '',\n};\n\nconst upFirstLetter = string => string.charAt(0).toUpperCase() + string.slice(1);\n\nconst Form = ({\n  FieldGroup,\n  onChange,\n  getValidationState,\n  ...props,\n}) => {\n  const onSubmit = e => {\n    e.preventDefault();\n    document.getElementById(\"contact-form\").reset();\n    props.onSubmit();\n  };\n  const isValid = props.isValidate();\n  return (\n    <form id=\"contact-form\" onChange={onChange} onSubmit={onSubmit}>\n      {\n        formFields.map((field, i) =>\n          <FieldGroup\n            key = {i}\n            id={field.id}\n            type={field.type}\n            name={field.id}\n            componentClass={field.componentClass}\n            placeholder={upFirstLetter(field.id)}\n            validationState={getValidationState(field.id)}\n          />\n        )\n      }\n      <Button disabled={!isValid} type=\"submit\">SEND</Button>\n      <Button type=\"reset\">RESET</Button>\n    </form>\n  );\n}\n\nexport default withForm(state)(validateRules)(Form);\n","import React from 'react'\nimport { Map, GoogleApiWrapper } from 'google-maps-react'\nimport StaticContent from '../../components/StaticContent'\nimport ContactIcon from '../../components/ContactIcon'\nimport Form from './Form'\n\nclass Icon {\n  constructor(name, text, link, size = '2x') {\n    this.name = name\n    this.text = text\n    this.link = link\n    this.size = size\n  }\n}\n\nconst links = [\n  new Icon('email', 'contact@contact.com', 'mailto:contact@sarpisik.com'),\n  new Icon('facebook', 'Facebook Page', 'https://www.facebook.com/'),\n  new Icon('youtube', 'Youtube Channel', 'https://www.youtube.com/'),\n  new Icon('twitter', 'Twitter Page', 'https://twitter.com/'),\n  new Icon('instagram', 'Instagram Blog', 'https://www.instagram.com/')\n]\n\nconst mapStyle = {\n  maxWidth: '100%',\n  height: '150px',\n  position: 'relative',\n  marginLeft: 'auto',\n  marginRight: 'auto'\n}\n\nconst coordinate = {\n  lat: -1.2884,\n  lng: 36.8233\n}\n\nconst MapContainer = ({ google }) => (\n  <div id=\"map\" style={mapStyle}>\n    <Map google={google} zoom={14} initialCenter={coordinate} />\n  </div>\n)\n\nconst Contact = ({ google }) => (\n  <StaticContent image={3} title=\"CONTACT INFO\">\n    <div className=\"contact-page\">\n      <Form />\n      <div className=\"icon-container\">\n        {links.map((icon, i) => (\n          <ContactIcon key={i} icon={icon} />\n        ))}\n      </div>\n      <MapContainer google={google} />\n      <p>\n        <ContactIcon icon={new Icon('phone')} />\n        012345568\n      </p>\n      <p>ADRESS LINE 1</p>\n      <p>ADRESS LINE 2</p>\n      <p>ADRESS LINE 3</p>\n    </div>\n  </StaticContent>\n)\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_API_KEY\n})(Contact)\n"],"sourceRoot":""}